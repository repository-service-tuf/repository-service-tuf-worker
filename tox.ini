[tox]
envlist = py310,py311,lint,requirements,test

[flake8]
exclude = repository_service_tuf_worker/__init__.py,venv,.venv,settings.py,.git,.tox,dist,docs,*lib/python*,*egg,build,tools

[testenv]
setenv =
    RSTUF_WORKER_ID = "test"
    RSTUF_BROKER_SERVER = fakeserver
    RSTUF_REDIS_SERVER = redis://fake-redis
    RSTUF_SQL_SERVER = postgresql://fake-sql
    RSTUF_STORAGE_BACKEND = LocalStorage
    RSTUF_LOCAL_STORAGE_BACKEND_PATH = ./data-test/s
    RSTUF_KEYVAULT_BACKEND = LocalKeyVault
    RSTUF_LOCAL_KEYVAULT_PATH = ./data-test/kv
    RSTUF_LOCAL_KEYVAULT_KEYS = "online.key,strongPass"
    DATA_DIR = ./data-test

deps = -r{toxinidir}/requirements.txt
       -r{toxinidir}/requirements-dev.txt

[testenv:lint]
deps = pre-commit
setenv =
    BLACK_CACHE_DIR = ~/.cache/black/
commands =
    pre-commit run flake8 --all-files --show-diff-on-failure
    pre-commit run isort --all-files --show-diff-on-failure
    pre-commit run black --all-files --show-diff-on-failure
    pre-commit run bandit --all-files --show-diff-on-failure

[testenv:test]
commands =
    python -m pytest --cov-report=xml --cov-report=term --cov-config=tox.ini --cov -n auto -vv tests/

[run]
omit = tests/*

[testenv:requirements]
description="Check if `make requirements` is up-to-date."
deps = pipenv
skipsdist=false
allowlist_externals =
    bash
commands =
    pipenv --version
    bash -c 'diff -w requirements.txt <(pipenv requirements)'
    bash -c 'diff -w requirements-dev.txt <(pipenv requirements --dev)'

[testenv:docs]
deps = -r{toxinidir}/docs/requirements.txt
       -r{toxinidir}/requirements-dev.txt

allowlist_externals =
    plantuml
commands =
    plantuml -Djava.awt.headless=true -o ../source/_static/ -tpng docs/diagrams/*.puml
	sphinx-apidoc -f -o docs/source/devel/ repository_service_tuf_worker
	sphinx-build -E -W -b html docs/source docs/build/html


[gh-actions]
python =
    3.10: py310,pep8,lint,requirements,test
    3.11: py311,pep8,lint,requirements,test
