name: CD

on:
  push:
    tags:
      - v*
  workflow_dispatch:
    inputs:
      api_version:
        description: "API Version"
        default: "latest"
        type: string
        required: False
      cli_version:
        description: "CLI Version"
        default: "latest"
        type: string
        required: False

jobs:
  publish-container-image:
    uses: ./.github/workflows/publish_container.yml
    with:
      image_version: ${{ github.sha }}

  functional-tests-local:
    name: FT Deploy Local Services
    uses: ./.github/workflows/functional-tests.yml
    with:
      api_version: ${{ inputs.api_version }}
      cli_version: ${{ inputs.cli_version }}

  functional-tests-local-redis:
    name: FT Deploy Local Services with Redis as Broker
    uses: ./.github/workflows/functional-tests.yml
    with:
      docker_compose: docker-compose-redis.yml
      api_version: ${{ inputs.api_version }}
      cli_version: ${{ inputs.cli_version }}

  functional-tests-aws:
    name: FT Deploy AWS Services
    uses: ./.github/workflows/functional-aws.yml
    with:
      docker_compose: docker-compose-aws.yml
      api_version: ${{ inputs.api_version }}
      cli_version: ${{ inputs.cli_version }}

  prepare-rc:
    runs-on: ubuntu-latest
    needs: functional-tests
    outputs:
      release_id: ${{ steps.gh-release.outputs.id }}
    steps:
      - id: gh-release
        name: Publish GitHub release candiate
        uses: softprops/action-gh-release@de2c0eb89ae2a093876385947365aca7b0e5f844
        with:
          draft: true
          name: ${{ github.ref_name }}-rc
          tag_name: ${{ github.ref }}
          body: "Release waiting for review ${{ github.sha }}: [ghcr.io/repository-service-tuf/repository-service-tuf-worker:${{ github.sha }}](https://github.com/repository-service-tuf/repository-service-tuf-worker/pkgs/container/repository-service-tuf-worker)"

  release:
    runs-on: ubuntu-latest
    needs: prepare-rc
    environment: release

    steps:
    - name: Login to GitHub Container Registry
      uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Publish Docker Image on GitHub Registry
      run: |
        docker pull ghcr.io/repository-service-tuf/repository-service-tuf-worker:${{ github.sha }}
        docker tag ghcr.io/repository-service-tuf/repository-service-tuf-worker:${{ github.sha }} ghcr.io/repository-service-tuf/repository-service-tuf-worker:${{ github.ref_name }}
        docker tag ghcr.io/repository-service-tuf/repository-service-tuf-worker:${{ github.sha }} ghcr.io/repository-service-tuf/repository-service-tuf-worker:latest
        docker push ghcr.io/repository-service-tuf/repository-service-tuf-worker:${{ github.ref_name }}
        docker push ghcr.io/repository-service-tuf/repository-service-tuf-worker:latest

    - name: Publish GitHub Release
      uses: actions/github-script@d7906e4ad0b1822421a7e6a35d5ca353c962f410
      with:
        script: |
          await github.rest.repos.updateRelease({
            owner: context.repo.owner,
            repo: context.repo.repo,
            draft: false,
            release_id: '${{ needs.prepare-rc.outputs.release_id }}',
            name: '${{ github.ref_name }}',
            body: 'docker pull [ghcr.io/repository-service-tuf/repository-service-tuf-worker:${{ github.ref_name }}](https://github.com/repository-service-tuf/repository-service-tuf-worker/pkgs/container/repository-service-tuf-worker)'
          })
